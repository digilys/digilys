%h1
  - if @user == current_user
    = t(:".edit_self_title")
  - else
    = @user.name_was
    %small= User.model_name.human

.row-fluid
  - unless @user.errors.empty?
    .alert.alert-block.alert-errors
      = t(:".errors_found")
      - @user.errors.full_messages.each do |err|
        %li= err
  .span6
    = semantic_form_for @user do |f|

      = f.inputs t(:".details_title") do
        = f.input :name,  required: true, input_html: { required: true, autofocus: true }
        = f.input :email, required: true, input_html: { required: true }

      = f.inputs t(:".password_title") do
        - if @user == current_user
          = f.input :current_password, hint: t(:".current_password_hint")
          = f.input :password, hint: t(:".password_hint")
          = f.input :password_confirmation
        - else
          = f.input :password, hint: t(:".password_for_other_hint")
          = f.input :password_confirmation

      - if can? :change_instance, User
        - if Conf.multiple_instances
          = f.inputs t(:".instances_title") do
            = f.input :instances,
              as: :check_boxes,
              collection: Instance.authorized_instances(current_user)

      - if can? :manage, Role or can? :manage, User
        = f.inputs t(:".roles_title") do
          - if current_user.has_role?(:admin)
            = f.input :admin_instance_id,
              label: User.human_attribute_name(:admin_instance),
              as: :select,
              input_html: { multiple: false },
              selected: @user.is_instance_admin? ? @user.admin_instance.id : nil,
              collection: current_user.is_administrator? ? Instance.all : [current_user.admin_instance]
            .alert.alert-box.alert-info
              = t(:".admin_instance_explanation_html")

          - if current_user.has_role?(:admin)
            = f.input :roles,
              as: :select,
              include_blank: User.model_name.human,
              collection: Role.authorized_roles(current_user).collect { |r| [ t(:"roles.#{r.name}"), r.id ] },
              input_html: { multiple: false }
          - else
            - Role.authorized_roles(current_user).each do |role|
              = t(:"roles.#{role.name}")
          .alert.alert-box.alert-info
            = t(:".roles_explanation_html")

      = f.actions do
        = f.action :submit, label: t(:".save_action"), button_html: { class: "btn btn-primary" }
        %a.btn{href:users_path()}= t(:"cancel_action")

  .span6
    = semantic_form_for @user do |f|
      = f.inputs t(:".preferences_title") do
        = f.input :name_ordering,
          as: :select,
          include_blank: false,
          collection: { t(:".first_name_order") => :first_name, t(:".last_name_order") => :last_name }
      = f.actions do
        = f.action :submit, label: t(:".save_action"), button_html: { class: "btn btn-primary" }
        %a.btn{href:users_path()}= t(:"cancel_action")
